{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\FormNavbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@icons/material/MenuIcon';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nclass FormNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          open = _this$props.open;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      color: \"default\",\n      position: \"fixed\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.props.handleDrawerOpen,\n      edge: \"start\",\n      className: classNames(classes.menuButton, open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Create A Palette\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: classes.goBackLink,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Go Back\")), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.props.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Save Palette\")))), React.createElement(Dialog, {\n      id: \"paletteNameModal\",\n      open: openModal,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Add Palette Name\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Please Add Palette Name\"), React.createElement(ValidatorForm, {\n      onSubmit: this.savePalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: paletteName,\n      onChange: this.handleChange,\n      name: \"paletteName\",\n      validators: ['required', 'isPaletteNameUnique'],\n      errorMessages: ['This field is required. Enter a palette name!', 'Palette name must be unique!'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.cancelSave,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}\n\nexport default FormNavbar;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\FormNavbar.js"],"names":["React","Component","Link","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormNavbar","constructor","props","state","render","classes","open","appBar","appBarShift","handleDrawerOpen","menuButton","hide","goBackLink","openModal","handleClose","savePalette","paletteName","handleChange","cancelSave"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@icons/material/MenuIcon';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\n\r\n\r\nclass FormNavbar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n         \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        const {classes, open} = this.props;\r\n   \r\n        return(\r\n            <div>\r\n                <CssBaseline />\r\n                <AppBar\r\n                  color=\"default\"\r\n                    position=\"fixed\"\r\n                    className={classNames(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.props.handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={classNames(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Create A Palette\r\n                        </Typography>\r\n                        <div>\r\n                          <Link className={classes.goBackLink} to = \"/\">\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Go Back\r\n                            </Button>\r\n                          </Link>\r\n                            \r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.props.openModal}>\r\n                                Save Palette\r\n                            </Button>\r\n                        </div>\r\n                    </Toolbar>\r\n                 \r\n                </AppBar>\r\n\r\n                <Dialog id=\"paletteNameModal\" open={openModal} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                  <DialogTitle id=\"form-dialog-title\"> Add Palette Name</DialogTitle>\r\n\r\n                  <DialogContent>\r\n                      <DialogContentText>\r\n                          Please Add Palette Name\r\n                      </DialogContentText>\r\n\r\n                    <ValidatorForm onSubmit={this.savePalette}>\r\n                        <TextValidator \r\n                            value={paletteName}\r\n                            onChange={this.handleChange}\r\n                            name=\"paletteName\"\r\n                            validators={[\r\n                                'required', \r\n                                'isPaletteNameUnique',\r\n                              ]}\r\n                            errorMessages={[\r\n                              'This field is required. Enter a palette name!', \r\n                              'Palette name must be unique!', \r\n                            ]}\r\n\r\n                            />\r\n                          <DialogActions>\r\n                            <Button onClick={this.cancelSave} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Save\r\n                            </Button>\r\n                        </DialogActions>\r\n                        {/* <Dialog open={openEmoji}>\r\n                            <Picker  onSelect={this.addEmoji} />\r\n                        </Dialog> */}\r\n\r\n                    </ValidatorForm>\r\n             \r\n                  </DialogContent>\r\n                       \r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormNavbar;"]},"metadata":{},"sourceType":"module"}