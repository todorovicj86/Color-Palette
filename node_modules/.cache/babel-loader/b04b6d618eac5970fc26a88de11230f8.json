{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\PaletteShades.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PaletteNavbar from './PaletteNavbar';\nimport ColorBox from './ColorBox';\nimport Button from '@material-ui/core/Button'; // import Grid from '@material-ui/core/Grid'\n\nimport chroma from 'chroma-js';\nimport './PaletteShades.css';\nimport uuid from 'uuid';\n\nclass PaletteShades extends Component {\n  //  make shades of one color\n  getShades() {\n    let shadeObj = [];\n    const baseColor = this.props.color.color;\n    const name = this.props.color.name;\n    const darkestShade = chroma(baseColor).darken(4);\n    const brightestShade = chroma(baseColor).brighten(2.6);\n    const levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n    let colorShade = chroma.scale([brightestShade, baseColor, darkestShade]).colors(10);\n\n    for (let i = 0; i < levels.length; i++) {\n      let data = {\n        name: name + \" \" + levels[i],\n        color: colorShade[i]\n      };\n      shadeObj.push(data);\n    }\n\n    return shadeObj;\n  }\n\n  render() {\n    const shades = this.getShades();\n    const colorShades = shades.map(bgColor => React.createElement(ColorBox, {\n      colorName: bgColor.name,\n      bgColor: this.props.format === 'hex' && chroma(bgColor.color).hex() || this.props.format === \"rgb\" && chroma(bgColor.color).css() || this.props.format === \"rgba\" && chroma(bgColor.color).alpha(0.9).css(),\n      onCopy: this.props.onCopy,\n      format: this.props.format,\n      key: uuid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"PaletteShades\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PaletteShades-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(PaletteNavbar, {\n      handleFormat: this.props.handleFormat,\n      format: this.props.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"PaletteShades-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"LinkBackTo\",\n      to: \"/palette/\".concat(this.props.palette.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" Go back\")))), React.createElement(\"div\", {\n      className: \"ShadeBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, colorShades));\n  }\n\n}\n\nexport default PaletteShades;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\PaletteShades.js"],"names":["React","Component","Link","PaletteNavbar","ColorBox","Button","chroma","uuid","PaletteShades","getShades","shadeObj","baseColor","props","color","name","darkestShade","darken","brightestShade","brighten","levels","colorShade","scale","colors","i","length","data","push","render","shades","colorShades","map","bgColor","format","hex","css","alpha","onCopy","handleFormat","palette","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PaletteNavbar from './PaletteNavbar'\r\nimport ColorBox from './ColorBox'\r\nimport Button from '@material-ui/core/Button';\r\n// import Grid from '@material-ui/core/Grid'\r\nimport chroma from 'chroma-js'\r\nimport './PaletteShades.css'\r\nimport uuid from 'uuid'\r\n\r\n\r\nclass PaletteShades extends Component {\r\n//  make shades of one color\r\n    getShades(){\r\n        let shadeObj =[]\r\n        const baseColor = this.props.color.color;\r\n        const name = this.props.color.name;\r\n        const darkestShade = chroma(baseColor).darken(4);\r\n        const brightestShade = chroma(baseColor).brighten(2.6)\r\n        const levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n        let colorShade = chroma.scale([brightestShade, baseColor, darkestShade]).colors(10); \r\n        for(let i = 0; i < levels.length; i++){\r\n            let data = {\r\n                name: name + \" \" + levels[i],\r\n                color: colorShade[i]\r\n            }\r\n            shadeObj.push(data)\r\n        }\r\n        return shadeObj;\r\n    }\r\n\r\n    render(){\r\n        const shades = this.getShades();\r\n       \r\n        const colorShades = shades.map(bgColor => (\r\n            <ColorBox \r\n                colorName = {bgColor.name} \r\n                bgColor = {\r\n                    (this.props.format === 'hex' &&  chroma(bgColor.color).hex()) ||\r\n                    (this.props.format === \"rgb\" && chroma(bgColor.color).css()) ||\r\n                    (this.props.format === \"rgba\" && chroma(bgColor.color).alpha(0.9).css())                                                             \r\n                }\r\n                onCopy = {this.props.onCopy}\r\n                format = {this.props.format}\r\n                key = {uuid()}                                               \r\n            />\r\n        \r\n        ))\r\n        return(\r\n            <div className=\"PaletteShades\">\r\n                <div className=\"PaletteShades-header\">\r\n                    <PaletteNavbar handleFormat = {this.props.handleFormat} format = {this.props.format}/>\r\n                    <div className = \"PaletteShades-link\">\r\n                        <Button>\r\n                            <Link className= \"LinkBackTo\" to = {`/palette/${this.props.palette.id}`}><i className=\"fas fa-arrow-left\"></i> Go back</Link>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ShadeBoxes\">\r\n                    {colorShades}\r\n                </div>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaletteShades;"]},"metadata":{},"sourceType":"module"}