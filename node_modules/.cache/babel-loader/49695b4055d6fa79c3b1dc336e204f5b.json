{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\PaletteNavbar.js\";\nimport React, { Component } from 'react';\nimport Slider from 'rc-slider';\nimport { Link } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@icons/material/CloseIcon';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport 'rc-slider/assets/index.css';\nimport './PaletteNavbar.css';\n\nclass PaletteNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 500,\n      open: false\n    };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.handleShadeChange = this.handleShadeChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  handleFormatChange(evt) {\n    this.props.handleFormat(evt.target.value);\n    this.setState({\n      open: true\n    });\n  }\n\n  handleShadeChange(value) {\n    this.props.changeShade(value);\n    this.setState({\n      value: value\n    });\n  }\n\n  closeSnackbar() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          open = _this$state.open;\n    const _this$props = this.props,\n          format = _this$props.format,\n          showLink = _this$props.showLink;\n    return React.createElement(\"div\", {\n      className: \"PaletteNavbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"LogoName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"ColorPalettes\"))), React.createElement(\"div\", {\n      className: \"PaletteNavbar-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"Slider-legend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Level: [\", value, \"]\"), showLink && React.createElement(\"div\", {\n      className: \"Slider-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      defaultValue: value,\n      step: 100,\n      min: 100,\n      max: 900,\n      onChange: this.handleShadeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"PaletteNavbar-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: format,\n      onChange: this.handleFormatChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"hex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"HEX - #FFFFFF\"), React.createElement(MenuItem, {\n      value: \"rgb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"RGB - rgb(255, 255, 255)\"), React.createElement(MenuItem, {\n      value: \"rgba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"RGBA - rgba(255, 255, 255, 1.0)\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: open,\n      autoHideDuration: 3000,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Format Changed To \", format.toUpperCase(), \"!\"),\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      onClose: this.closeSnackbar,\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\" // className={classes.close}\n        ,\n        onClick: this.closeSnackbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PaletteNavbar;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\PaletteNavbar.js"],"names":["React","Component","Slider","Link","Snackbar","IconButton","CloseIcon","MenuItem","Select","PaletteNavbar","constructor","props","state","value","open","handleFormatChange","bind","handleShadeChange","closeSnackbar","evt","handleFormat","target","setState","changeShade","render","format","showLink","vertical","horizontal","toUpperCase"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Slider from 'rc-slider';\r\nimport {Link} from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@icons/material/CloseIcon';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport 'rc-slider/assets/index.css'\r\nimport './PaletteNavbar.css'\r\n\r\nclass PaletteNavbar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            value: 500,\r\n            open: false,\r\n        }\r\n          \r\n        this.handleFormatChange = this.handleFormatChange.bind(this)\r\n        this.handleShadeChange = this.handleShadeChange.bind(this)\r\n        this.closeSnackbar = this.closeSnackbar.bind(this)\r\n    }\r\n\r\n    handleFormatChange(evt){\r\n        this.props.handleFormat(evt.target.value)\r\n        this.setState({\r\n            open: true,\r\n        })\r\n    }\r\n\r\n    handleShadeChange(value){\r\n        this.props.changeShade(value);\r\n        this.setState({\r\n            value: value,\r\n        })\r\n        \r\n    }\r\n    closeSnackbar(){\r\n        this.setState({open: false})\r\n    }\r\n\r\n    render(){\r\n        const {value, open} = this.state;\r\n        const {format, showLink} = this.props;\r\n        return(\r\n            <div className=\"PaletteNavbar\">\r\n                <div className=\"LogoName\">\r\n                    <h3>\r\n                        <Link to=\"/\">ColorPalettes</Link>\r\n                    </h3>\r\n                </div>\r\n                <div className=\"PaletteNavbar-slider\">\r\n                    <span className=\"Slider-legend\">\r\n                        Level: [{value}]\r\n                    </span>\r\n                    {showLink && \r\n                    <div className=\"Slider-container\">\r\n                        <Slider \r\n                            defaultValue={value}\r\n                            step={100}\r\n                            min={100}\r\n                            max={900}\r\n                            onChange={this.handleShadeChange}\r\n                        />\r\n                    </div>\r\n                }\r\n                </div>\r\n                <div className=\"PaletteNavbar-select\">\r\n                    <Select value = {format} onChange={this.handleFormatChange}>\r\n                        <MenuItem value = 'hex'>HEX - #FFFFFF</MenuItem>\r\n                        <MenuItem value='rgb'>RGB - rgb(255, 255, 255)</MenuItem>\r\n                        <MenuItem value='rgba'>RGBA - rgba(255, 255, 255, 1.0)</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                \r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={open}\r\n                    autoHideDuration={3000}\r\n                    message={<span id=\"message-id\">Format Changed To {format.toUpperCase()}!</span>}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    onClose={this.closeSnackbar}\r\n                    \r\n                    action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        // className={classes.close}\r\n                        onClick={this.closeSnackbar}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>,\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaletteNavbar;\r\n"]},"metadata":{},"sourceType":"module"}