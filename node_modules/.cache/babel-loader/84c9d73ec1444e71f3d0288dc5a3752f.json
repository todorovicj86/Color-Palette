{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\NewPaletteForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChromePicker } from 'react-color';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailboxIcon from '@icons/material/MailboxIcon';\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDrawer = (side, open) => event => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      this.setState(state => _objectSpread({}, state, {\n        [side]: open\n      }));\n    };\n\n    this.state = {\n      color: \"#000\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n  }\n\n  handleChange(color, event) {\n    this.setState({\n      color: color.hex\n    });\n  }\n\n  render() {\n    const fullList = side => React.createElement(\"div\", {\n      role: \"presentation\",\n      onClick: this.toggleDrawer(side, false),\n      onKeyDown: this.toggleDrawer(side, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, index % 2 === 0 ? \" \" : React.createElement(MailboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, ['All mail', 'Trash', 'Spam'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, index % 2 === 0 ? \" \" : React.createElement(MailboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))));\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.toggleDrawer('left', true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Open Left\"), React.createElement(Drawer, {\n      open: this.state.left,\n      onClose: this.toggleDrawer('left', false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.sideList('left')), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Crete new palette in here\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Go Back\"), React.createElement(ChromePicker, {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        backgroundColor: this.state.color,\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"To change background color\"));\n  }\n\n}\n\nexport default NewPaletteForm;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\NewPaletteForm.js"],"names":["React","Component","Link","ChromePicker","Drawer","Button","List","Divider","ListItem","ListItemIcon","ListItemText","MailboxIcon","NewPaletteForm","constructor","props","toggleDrawer","side","open","event","type","key","setState","state","color","handleChange","bind","hex","render","fullList","map","text","index","left","sideList","backgroundColor","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,cAAN,SAA6BX,SAA7B,CAAuC;AACnCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAahBC,YAbgB,GAaD,CAACC,IAAD,EAAOC,IAAP,KAAgBC,KAAK,IAAI;AACtC,UAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAC9E;AACD;;AAED,WAAKC,QAAL,CAAcC,KAAK,sBACVA,KADU;AACH,SAACN,IAAD,GAAQC;AADL,QAAnB;AAED,KApBe;;AAEd,SAAKK,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKV,YAAL,GAAoB,KAAKA,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,CAACD,KAAD,EAAQL,KAAR,EAAe;AACvB,SAAKG,QAAL,CAAc;AAAEE,MAAAA,KAAK,EAAEA,KAAK,CAACG;AAAf,KAAd;AACD;;AAWHC,EAAAA,MAAM,GAAE;AAGJ,UAAMC,QAAQ,GAAGZ,IAAI,IACjB;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,OAAO,EAAE,KAAKD,YAAL,CAAkBC,IAAlB,EAAwB,KAAxB,CAHX;AAIE,MAAA,SAAS,EAAE,KAAKD,YAAL,CAAkBC,IAAlB,EAAwB,KAAxB,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,OAAD,EAAU,SAAV,EAAqB,YAArB,EAAmC,QAAnC,EAA6Ca,GAA7C,CAAiD,CAACC,IAAD,EAAOC,KAAP,KAChD,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,GAAlB,GAAwB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CADF,EAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,CADH,CANF,EAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,EAA8BD,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KACjC,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,GAAlB,GAAwB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CADF,EAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,CADH,CAfF,CADJ;;AA2BA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKf,YAAL,CAAkB,MAAlB,EAA0B,IAA1B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKO,KAAL,CAAWU,IAAzB;AAA+B,MAAA,OAAO,EAAE,KAAKjB,YAAL,CAAkB,MAAlB,EAA0B,KAA1B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKkB,QAAL,CAAc,MAAd,CADJ,CAFD,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCALJ,EAMI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,EAOI,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAI,KAAKT,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWC,KAA7B;AAAoCY,QAAAA,MAAM,EAAE;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCARJ,CADJ;AAeH;;AApEkC;;AAuEvC,eAAevB,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {ChromePicker} from 'react-color'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport MailboxIcon from '@icons/material/MailboxIcon';\r\n\r\nclass NewPaletteForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color: \"#000\",\r\n          \r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.toggleDrawer = this.toggleDrawer.bind(this)\r\n    }\r\n    handleChange(color, event) {\r\n        this.setState({ color: color.hex });\r\n      };\r\n\r\n      toggleDrawer = (side, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n    \r\n        this.setState(state =>(\r\n            { ...state, [side]: open }));\r\n      }; \r\n   \r\n    render(){\r\n       \r\n\r\n        const fullList = side => (\r\n            <div\r\n          \r\n              role=\"presentation\"\r\n              onClick={this.toggleDrawer(side, false)}\r\n              onKeyDown={this.toggleDrawer(side, false)}\r\n            >\r\n              <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                  <ListItem button key={text}>\r\n                    <ListItemIcon>{index % 2 === 0 ? \" \" : <MailboxIcon />}</ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              <Divider />\r\n              <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                  <ListItem button key={text}>\r\n                    <ListItemIcon>{index % 2 === 0 ? \" \" : <MailboxIcon />}</ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          );\r\n \r\n        return(\r\n            <div>\r\n             <Button onClick={this.toggleDrawer('left', true)}>Open Left</Button>\r\n             <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\r\n                {this.sideList('left')}\r\n            </Drawer>\r\n                <h1>Crete new palette in here</h1>\r\n                <Link to = \"/\"> Go Back</Link>\r\n                <ChromePicker onChange = {this.handleChange}/>\r\n                <div style={{backgroundColor: this.state.color, height: \"200px\"}}>\r\n                    To change background color\r\n                </div>\r\n            </div>\r\n         \r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPaletteForm;"]},"metadata":{},"sourceType":"module"}