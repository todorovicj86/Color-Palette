{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ModalDialog.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@icons/material/MenuIcon';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nclass ModalDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openModal: false,\n      paletteName: \"\"\n    };\n    this.cancelSave = this.cancelSave.bind(this);\n    this.openModal = this.openModal.bind(this); // this.handleChange = this.handleChange.bind(this)\n  }\n\n  openModal() {\n    this.setState({\n      openModal: true\n    });\n  }\n\n  cancelSave() {\n    this.setState({\n      openModal: false\n    });\n  }\n\n  render() {\n    const openModal = this.state.openModal;\n    const _this$props = this.props,\n          paletteName = _this$props.paletteName,\n          handleChange = _this$props.handleChange;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      id: \"paletteNameModal\",\n      open: openModal,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" Add Palette Name\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Please Add Palette Name\"), React.createElement(ValidatorForm, {\n      onSubmit: () => this.props.savePalette(paletteName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      value: paletteName,\n      onChange: handleChange,\n      name: \"paletteName\",\n      validators: ['required', 'isPaletteNameUnique'],\n      errorMessages: ['This field is required. Enter a palette name!', 'Palette name must be unique!'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: cancelSave,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}\n\nexport default ModalDialog;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ModalDialog.js"],"names":["React","Component","Link","withStyles","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","ModalDialog","constructor","props","state","openModal","paletteName","cancelSave","bind","setState","render","handleChange","handleClose","savePalette"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@icons/material/MenuIcon';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nclass ModalDialog extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            openModal: false,\r\n            paletteName: \"\",\r\n         \r\n        }\r\n        this.cancelSave = this.cancelSave.bind(this)\r\n        this.openModal = this.openModal.bind(this)\r\n        // this.handleChange = this.handleChange.bind(this)\r\n        \r\n    }\r\n\r\n    openModal(){\r\n        this.setState({\r\n          openModal: true,\r\n        })\r\n    }\r\n  \r\n    cancelSave(){\r\n        this.setState({\r\n          openModal: false,\r\n        })\r\n    }\r\n    render(){\r\n        const {openModal} = this.state;\r\n        const {paletteName, handleChange} = this.props;\r\n        return(\r\n            <div>\r\n                <Dialog id=\"paletteNameModal\" open={openModal} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\"> Add Palette Name</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Please Add Palette Name\r\n                        </DialogContentText>\r\n\r\n                        <ValidatorForm onSubmit={() => this.props.savePalette(paletteName)}>\r\n                            <TextValidator \r\n                                value={paletteName}\r\n                                onChange={handleChange}\r\n                                name=\"paletteName\"\r\n                                validators={[\r\n                                    'required', \r\n                                    'isPaletteNameUnique',\r\n                                ]}\r\n                                errorMessages={[\r\n                                'This field is required. Enter a palette name!', \r\n                                'Palette name must be unique!', \r\n                                ]}\r\n\r\n                                />\r\n                            <DialogActions>\r\n                                <Button onClick={cancelSave} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </ValidatorForm>\r\n                \r\n                    </DialogContent>\r\n                       \r\n                </Dialog>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalDialog;"]},"metadata":{},"sourceType":"module"}