{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ColorPalette.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // import {SortableContainer, SortableElement} from 'react-sortable-hoc';\n// import ColorBox from './ColorBox'\n\nimport PaletteFooter from './PaletteFooter';\nimport PaletteNavbar from './PaletteNavbar';\nimport Grid from '@material-ui/core/Grid';\nimport chroma from 'chroma-js';\n\nclass ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  handleCopy(evt) {\n    this.props.onCopy(true);\n  }\n\n  render() {\n    const palette = this.props.palette;\n    return React.createElement(\"div\", {\n      className: \"ColorPalette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(PaletteNavbar, {\n      handleFormat: this.props.handleFormat,\n      format: this.props.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Go back\")), React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, palette.colors.map(color => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      style: {\n        height: \"25vh\",\n        position: \"relative\",\n        backgroundColor: color.color,\n        color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, color.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.props.format === 'hex' && chroma(color.color).hex() || this.props.format === \"rgb\" && chroma(color.color).css() || this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css()), React.createElement(CopyToClipboard, {\n      onCopy: this.handleCopy,\n      text: this.props.format === 'hex' && chroma(color.color).hex() || this.props.format === \"rgb\" && chroma(color.color).css() || this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Copy\")), React.createElement(Link, {\n      to: \"/palette/\".concat(palette.id, \"/\").concat(color.name),\n      style: {\n        color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"More\")))), React.createElement(PaletteFooter, {\n      paletteName: palette.paletteName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ColorPalette;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ColorPalette.js"],"names":["React","Component","Link","CopyToClipboard","PaletteFooter","PaletteNavbar","Grid","chroma","ColorPalette","constructor","props","handleCopy","bind","evt","onCopy","render","palette","handleFormat","format","colors","map","color","height","position","backgroundColor","contrast","name","hex","css","alpha","id","paletteName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\n// import {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\n// import ColorBox from './ColorBox'\r\nimport PaletteFooter from './PaletteFooter'\r\nimport PaletteNavbar from './PaletteNavbar'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport chroma from 'chroma-js'\r\n\r\nclass ColorPalette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleCopy = this.handleCopy.bind(this)\r\n    }\r\n\r\n    handleCopy(evt){\r\n       this.props.onCopy(true)\r\n    }\r\n\r\n    render(){\r\n\r\n        const palette = this.props.palette;\r\n                      \r\n        return(\r\n            <div className=\"ColorPalette\">\r\n         \r\n               <PaletteNavbar handleFormat = {this.props.handleFormat} format = {this.props.format} />\r\n               <div>\r\n                    <Link to = \"/\">Go back</Link>\r\n                </div>\r\n               <Grid container spacing={0}>\r\n                    {\r\n                        palette.colors.map(color => (\r\n                            <Grid item xs={12} sm={3} style={{height: \"25vh\",position: \"relative\", \r\n                                backgroundColor: color.color,\r\n                                    color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\"\r\n                                }}>\r\n                            \r\n                                 <p>{color.name}</p>\r\n                               \r\n                                 <p>{\r\n                                        (this.props.format === 'hex' &&  chroma(color.color).hex()) ||\r\n                                        (this.props.format === \"rgb\" && chroma(color.color).css()) ||\r\n                                        (this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css())  \r\n                                    }\r\n                                </p>\r\n\r\n                                <CopyToClipboard onCopy = {this.handleCopy} \r\n                                                text={(this.props.format === 'hex' &&  chroma(color.color).hex()) ||\r\n                                                        (this.props.format === \"rgb\" && chroma(color.color).css()) ||\r\n                                                        (this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css())}\r\n                                >\r\n                                    <button>Copy</button>\r\n                                </CopyToClipboard>\r\n                                                    \r\n                                <Link to = {`/palette/${palette.id}/${color.name}`} style={{ color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\"}}>More</Link>\r\n                            </Grid> \r\n                        ))\r\n                    }\r\n                </Grid>\r\n\r\n                <PaletteFooter paletteName = {palette.paletteName} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorPalette;"]},"metadata":{},"sourceType":"module"}