{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\NewPaletteForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChromePicker } from 'react-color';\nimport ColorBox from './ColorBox';\nimport seedColors from './seedColors';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paletteName: \"\",\n      id: \"\",\n      emoji: \"\",\n      colors: [{\n        name: \"red\",\n        color: \"#FF0000\"\n      }],\n      name: \"\",\n      color: \"\",\n      bgColor: \"#FF0000\",\n      open: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addColorName = this.addColorName.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(color) {\n    let newColor = color.hex;\n    this.setState({\n      color: newColor\n    });\n  }\n\n  addNewColor(color) {\n    this.setState({});\n  }\n\n  addColorName(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n  }\n\n  handleClick(evt) {\n    let newColorName = this.state.name;\n    let newColorCode = this.state.color;\n    let toAdd = {\n      name: newColorName,\n      color: newColorCode\n    };\n    this.setState(st => ({\n      colors: [...st.colors, toAdd],\n      name: \"\",\n      color: \"\"\n    }));\n  }\n\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      className: \"NewPaletteForm\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: {\n        backgroundColor: \"whitesmoke\",\n        width: \"15%\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Design Your Palette\"), React.createElement(Grid, {\n      item: true,\n      style: {\n        margin: \"30px 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Random Color\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Clear Palette\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(ChromePicker, {\n      color: this.state.color,\n      onChangeComplete: this.handleChange,\n      style: {\n        margin: \"30px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"filled-with-placeholder\",\n      label: \"Color Name\",\n      placeholder: \"Color Name\",\n      margin: \"normal\",\n      variant: \"filled\",\n      value: this.state.name,\n      name: \"name\",\n      onChange: this.addColorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleClick,\n      style: {\n        backgroundColor: this.state.colors.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Add Color\")))), React.createElement(Grid, {\n      container: true,\n      style: {\n        width: \"85%\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      style: {\n        backgroundColor: \"white\",\n        padding: \"10px\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        display: \"inline-block\",\n        textAlign: \"left\",\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Create A Palette\"), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        textAlign: \"right\",\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" Go Back\")), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.colors.map(color => React.createElement(ColorBox, {\n      colorCode: color.color,\n      colorName: color.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Open form dialog\"), React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Email Address\",\n      type: \"email\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Subscribe\")))));\n  }\n\n}\n\nNewPaletteForm.defaultProps = {\n  maxColors: 20\n};\nexport default NewPaletteForm;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\NewPaletteForm.js"],"names":["React","Component","Link","ChromePicker","ColorBox","seedColors","Grid","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","NewPaletteForm","constructor","props","state","paletteName","id","emoji","colors","name","color","bgColor","open","handleChange","bind","addColorName","handleSubmit","handleClick","newColor","hex","setState","addNewColor","evt","target","value","preventDefault","newColorName","newColorCode","toAdd","st","handleClickOpen","handleClose","render","height","backgroundColor","width","flexDirection","alignItems","margin","padding","display","textAlign","map","defaultProps","maxColors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {ChromePicker} from 'react-color'\r\nimport ColorBox from './ColorBox'\r\nimport seedColors from './seedColors'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\nclass NewPaletteForm extends Component {\r\n    static defaultProps = {\r\n        maxColors: 20,\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            paletteName: \"\",\r\n            id: \"\",\r\n            emoji: \"\",\r\n            colors: [\r\n                { name: \"red\", color: \"#FF0000\"}\r\n            ],\r\n            name: \"\",\r\n            color: \"\",\r\n            bgColor: \"#FF0000\",\r\n            open: false,\r\n          \r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.addColorName = this.addColorName.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n\r\n    }\r\n    handleChange(color) {\r\n        let newColor = color.hex\r\n   \r\n        this.setState({\r\n            color:newColor, \r\n        })\r\n    };\r\n\r\n    addNewColor(color){\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n    addColorName(evt){\r\n       \r\n        this.setState({\r\n            [evt.target.name]: evt.target.value, \r\n        })\r\n        \r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n    }\r\n\r\n    handleClick(evt){\r\n        let newColorName = this.state.name;\r\n        let newColorCode = this.state.color;\r\n        let toAdd = {\r\n            name: newColorName,\r\n            color: newColorCode\r\n        }\r\n    \r\n        this.setState(st => ({\r\n            colors: [...st.colors,  toAdd],\r\n            name: \"\",\r\n            color: \"\"\r\n        }))\r\n    \r\n    }\r\n   \r\n\r\n    handleClickOpen() {\r\n        this.setState({\r\n            open: true,\r\n        })\r\n    \r\n    }\r\n  \r\n    handleClose() {\r\n        this.setState({\r\n            open:false,\r\n        })\r\n    }\r\n \r\n    render(){\r\n\r\n \r\n        return(\r\n            <Grid container justify=\"center\" className = \"NewPaletteForm\" style={{height: \"100vh\"}}>\r\n                <Grid container justify=\"center\" style={{backgroundColor:\"whitesmoke\", width: \"15%\",  flexDirection: \"column\", alignItems: \"center\"}}>\r\n                    <h2>Design Your Palette</h2>\r\n                    <Grid item style= {{margin:\"30px 0\"}}>\r\n                     \r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Random Color\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Clear Palette\r\n                            </Button>\r\n                    \r\n                    </Grid>\r\n                    <Grid item>\r\n                    \r\n                        <ChromePicker color={this.state.color}\r\n                                    onChangeComplete = {this.handleChange}\r\n                                    style={{margin: \"30px auto\"}}\r\n                        />\r\n                        <form onSubmit = {this.handleSubmit}>  \r\n                            <TextField\r\n                                id=\"filled-with-placeholder\"\r\n                                label=\"Color Name\"\r\n                                placeholder=\"Color Name\"\r\n                                margin=\"normal\"\r\n                                variant=\"filled\"\r\n                                value = {this.state.name}\r\n                                name=\"name\"\r\n                                onChange={this.addColorName}\r\n                            />\r\n                            <Button onClick = {this.handleClick} style={{backgroundColor: this.state.colors.color}}>\r\n                                Add Color\r\n                            </Button>\r\n                        </form>\r\n                        \r\n                      \r\n                    </Grid>\r\n                </Grid>\r\n            \r\n                <Grid container style={{width: \"85%\", flexDirection: \"column\" }}>\r\n                    <Grid item style={{backgroundColor: \"white\", padding: \"10px\", height: \"auto\"}}>\r\n                        <h5 style={{display: \"inline-block\", textAlign: \"left\", width: \"50%\" }}>Create A Palette</h5>\r\n                        <div style={{display: \"inline-block\", textAlign: \"right\", width: \"50%\"}}>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                <Link to = \"/\" style={{color: \"white\"}}> Go Back</Link>\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Save\r\n                            </Button>\r\n                            \r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item> \r\n                        {this.state.colors.map(color => (\r\n                            <ColorBox colorCode = {color.color}\r\n                                    colorName = {color.name}\r\n                            />\r\n                        ))}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n\r\n                    <div>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                            Open form dialog\r\n                        </Button>\r\n                        <Dialog open={open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                            <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText>\r\n                                To subscribe to this website, please enter your email address here. We will send updates\r\n                                occasionally.\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n                                fullWidth\r\n                            />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Subscribe\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n            </Grid>\r\n         \r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPaletteForm;"]},"metadata":{},"sourceType":"module"}