{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\Routes.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport seedColors from './seedColors';\nimport ColorPalette from './ColorPalette';\nimport ColorPaletteList from './ColorPaletteList';\nimport PaletteShades from './PaletteShades';\nimport NewPaletteForm from './NewPaletteForm';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"hex\",\n      copied: false\n    };\n    this.handleFormat = this.handleFormat.bind(this);\n    this.onCopy = this.onCopy.bind(this);\n  }\n\n  handleFormat(value) {\n    this.setState({\n      format: value\n    });\n  }\n\n  onCopy(value) {\n    this.setState({\n      copied: value\n    });\n  }\n\n  render() {\n    const getPalette = props => {\n      let name = props.match.params.name;\n      let currentPalette = this.props.colorPalettes.find(palette => palette.id === name);\n      return React.createElement(ColorPalette, Object.assign({}, props, {\n        palette: currentPalette,\n        format: this.state.format,\n        handleFormat: this.handleFormat,\n        onCopy: this.onCopy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    };\n\n    const getColorShades = props => {\n      let name = props.match.params.name;\n      let colorName = props.match.params.colorName;\n      let currentPalette = this.props.colorPalettes.find(palette => palette.id === name);\n      let currentColor = currentPalette.colors.find(color => color.name === colorName);\n      return React.createElement(PaletteShades, Object.assign({}, props, {\n        color: currentColor,\n        palette: currentPalette,\n        format: this.state.format,\n        handleFormat: this.handleFormat,\n        onCopy: this.onCopy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/palette\",\n      render: () => React.createElement(ColorPaletteList, {\n        colorPalettes: this.props.colorPalettes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:name\",\n      render: getPalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:name/:colorName\",\n      render: getColorShades,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/newPalette\",\n      component: NewPaletteForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      exact: true,\n      path: \"/palette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nRoutes.defaultProps = {\n  colorPalettes: seedColors\n};\nexport default Routes;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\Routes.js"],"names":["React","Component","Route","Switch","Redirect","seedColors","ColorPalette","ColorPaletteList","PaletteShades","NewPaletteForm","Routes","constructor","props","state","format","copied","handleFormat","bind","onCopy","value","setState","render","getPalette","name","match","params","currentPalette","colorPalettes","find","palette","id","getColorShades","colorName","currentColor","colors","color","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport seedColors from './seedColors'\r\nimport ColorPalette from './ColorPalette'\r\nimport ColorPaletteList from './ColorPaletteList'\r\nimport PaletteShades from './PaletteShades'\r\nimport NewPaletteForm from './NewPaletteForm';\r\n\r\nclass Routes extends Component {\r\n    static defaultProps = {\r\n        colorPalettes: seedColors\r\n    }\r\n      constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            format: \"hex\",\r\n            copied: false\r\n        }\r\n    \r\n        this.handleFormat = this.handleFormat.bind(this)\r\n        this.onCopy = this.onCopy.bind(this)\r\n      }\r\n    \r\n      handleFormat(value){\r\n          this.setState({\r\n              format: value,\r\n          })\r\n      }\r\n      onCopy(value){\r\n        this.setState({\r\n          copied: value\r\n        })\r\n      }\r\n       \r\n    render(){\r\n        const getPalette = props => {\r\n            let name = props.match.params.name;\r\n                 \r\n            let currentPalette = this.props.colorPalettes.find(\r\n              palette => palette.id === name\r\n              \r\n            );\r\n            return <ColorPalette {...props} palette={currentPalette} \r\n                    format={this.state.format} \r\n                    handleFormat = {this.handleFormat}\r\n                    onCopy = {this.onCopy} \r\n                    />;\r\n        };\r\n      \r\n        const getColorShades = props => {\r\n            let name = props.match.params.name;\r\n            let colorName = props.match.params.colorName;\r\n            let currentPalette = this.props.colorPalettes.find( \r\n              palette => palette.id === name\r\n            )\r\n            let currentColor = currentPalette.colors.find(\r\n              color => color.name === colorName\r\n            )\r\n            return <PaletteShades {...props} color={currentColor} \r\n                    palette = {currentPalette} \r\n                    format={this.state.format} \r\n                    handleFormat = {this.handleFormat}\r\n                    onCopy = {this.onCopy} \r\n                  />\r\n          }\r\n\r\n        return(\r\n            <Switch>\r\n                <Route exact path=\"/palette\" render = {() => <ColorPaletteList colorPalettes={this.props.colorPalettes} />} />\r\n                <Route exact path = \"/palette/:name\" render = {getPalette} />\r\n                <Route exact path = \"/palette/:name/:colorName\" render ={getColorShades} />\r\n                <Route exact path = \"/palette/newPalette\" component = {NewPaletteForm} />\r\n                <Redirect exact path = \"/palette\" />\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}