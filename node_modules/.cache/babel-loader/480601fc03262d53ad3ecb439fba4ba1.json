{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ColorPalette.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ColorBox from './ColorBox';\nimport PaletteNavbar from './PaletteNavbar';\nimport Footer from './Footer';\nimport { getPaletteShades } from './helpers';\nimport { withStyles } from '@material-ui/styles';\nimport './ColorPalette.css';\nimport uuid from 'uuid';\nconst styles = {\n  colorPalette: {\n    backgroundColor: \"white\",\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  header: {},\n  link: {},\n  colorBoxesContainer: {}\n};\n\nclass ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shadeLevel: 500\n    };\n    this.handleCopy = this.handleCopy.bind(this);\n    this.changeShade = this.changeShade.bind(this);\n  }\n\n  handleCopy(evt) {\n    this.props.onCopy(true);\n  }\n\n  changeShade(shadeLevel) {\n    this.setState({\n      shadeLevel: shadeLevel\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          palette = _this$props.palette,\n          format = _this$props.format,\n          sliderMarks = _this$props.sliderMarks,\n          handleFormat = _this$props.handleFormat,\n          classes = _this$props.classes;\n    const colorBoxes = palette.colors[this.state.shadeLevel].map(color => React.createElement(ColorBox, {\n      bgColor: color[format],\n      colorName: color.name,\n      key: uuid(),\n      onCopy: this.handleCopy,\n      format: format,\n      paletteId: palette.id,\n      id: color.id,\n      showingFullPalette: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n    getPaletteShades(palette);\n    return React.createElement(\"div\", {\n      className: \"ColorPalette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ColorPalette-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(PaletteNavbar, {\n      handleFormat: handleFormat,\n      format: format,\n      marks: sliderMarks,\n      changeShade: this.changeShade,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ColorPalette-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"LinkBackTo\",\n      id: \"LinkBackTo\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \" Go back\")))), React.createElement(\"div\", {\n      className: \"ColorPalette-ColorBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, colorBoxes), React.createElement(Footer, Object.assign({}, palette, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(styles)(ColorPalette);","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ColorPalette.js"],"names":["React","Component","Link","Button","ColorBox","PaletteNavbar","Footer","getPaletteShades","withStyles","uuid","styles","colorPalette","backgroundColor","height","overflow","header","link","colorBoxesContainer","ColorPalette","constructor","props","state","shadeLevel","handleCopy","bind","changeShade","evt","onCopy","setState","render","palette","format","sliderMarks","handleFormat","classes","colorBoxes","colors","map","color","name","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport ColorBox from './ColorBox'\r\nimport PaletteNavbar from './PaletteNavbar'\r\nimport Footer from './Footer'\r\nimport {getPaletteShades} from './helpers'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport './ColorPalette.css'\r\nimport uuid from 'uuid'\r\n\r\nconst styles = {\r\n    colorPalette: {\r\n        backgroundColor: \"white\",\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n    },\r\n    header: {\r\n\r\n    },\r\n    link: {\r\n\r\n    },\r\n    colorBoxesContainer: {\r\n\r\n    }\r\n\r\n}\r\n\r\nclass ColorPalette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            shadeLevel: 500,\r\n\r\n        }\r\n        this.handleCopy = this.handleCopy.bind(this)\r\n        this.changeShade = this.changeShade.bind(this)\r\n    }\r\n\r\n    handleCopy(evt){\r\n       this.props.onCopy(true)\r\n    }\r\n\r\n    changeShade(shadeLevel){\r\n        this.setState({\r\n            shadeLevel: shadeLevel\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const {palette, format, sliderMarks,handleFormat, classes} = this.props;\r\n        const colorBoxes = palette.colors[this.state.shadeLevel].map (color => (\r\n            <ColorBox \r\n                bgColor = {color[format]}\r\n                colorName = {color.name}\r\n                key={uuid()}\r\n                onCopy = {this.handleCopy}\r\n                format = {format}\r\n                paletteId = {palette.id}\r\n                id={color.id}\r\n                showingFullPalette={true}\r\n            />\r\n        ))\r\n          \r\n          getPaletteShades(palette)\r\n        return (\r\n            <div className=\"ColorPalette\">\r\n                <div className=\"ColorPalette-header\">\r\n                    <PaletteNavbar \r\n                        handleFormat = {handleFormat} \r\n                        format = {format} \r\n                        marks = {sliderMarks}\r\n                        changeShade = {this.changeShade}\r\n                    />\r\n\r\n                    <div className=\"ColorPalette-link\">\r\n                         <Button>\r\n                            <Link className= \"LinkBackTo\" id=\"LinkBackTo\" to = \"/\"><i className=\"fas fa-arrow-left\"></i> Go back</Link>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ColorPalette-ColorBoxes\">\r\n                    {colorBoxes}\r\n                </div>\r\n\r\n                <Footer {...palette}/>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorPalette);"]},"metadata":{},"sourceType":"module"}