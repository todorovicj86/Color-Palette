{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ColorBox.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/styles';\nimport chroma from 'chroma-js';\nimport styles from './styles/ColorBoxStyles';\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  handleCopy(evt) {\n    this.setState({\n      copied: true\n    }, () => setTimeout(() => this.setState({\n      copied: false\n    }), 1500));\n  }\n\n  render() {\n    const _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          colorName = _this$props.colorName,\n          paletteId = _this$props.paletteId,\n          id = _this$props.id,\n          showingFullPalette = _this$props.showingFullPalette,\n          classes = _this$props.classes,\n          format = _this$props.format,\n          showLink = _this$props.showLink;\n    const copied = this.state.copied;\n    const textColor = chroma.contrast(bgColor, 'white') >= 4.5 ? \"white\" : \"black\";\n    return React.createElement(\"div\", {\n      className: \"\".concat(classes.ColorBox, \" \").concat(classes.dynamicColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(classes.copyOverlayer, \" \").concat(copied && classes.copyOverlayerShow),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\".concat(classes.overlayerMsg, \" \").concat(copied && classes.overlayerMsgShow),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Copied!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, bgColor)), React.createElement(\"div\", {\n      className: classes.colorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, colorName), React.createElement(CopyToClipboard, {\n      onCopy: this.handleCopy,\n      text: format === 'hex' && chroma(bgColor).hex() || format === \"rgb\" && chroma(bgColor).css() || format === \"rgba\" && chroma(bgColor).alpha(0.9).css(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: classes.copyButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Copy\")), showingFullPalette && !showLink && React.createElement(Button, {\n      className: classes.moreButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/palette/\".concat(paletteId, \"/\").concat(id),\n      onClick: e => e.stopPropagation(),\n      style: {\n        color: textColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"More\")));\n  }\n\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ColorBox.js"],"names":["React","Component","Link","CopyToClipboard","Button","withStyles","chroma","styles","ColorBox","constructor","props","state","copied","handleCopy","bind","evt","setState","setTimeout","render","bgColor","colorName","paletteId","id","showingFullPalette","classes","format","showLink","textColor","contrast","dynamicColor","copyOverlayer","copyOverlayerShow","overlayerMsg","overlayerMsgShow","hex","css","alpha","copyButton","moreButton","e","stopPropagation","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport chroma from 'chroma-js'\r\nimport styles from './styles/ColorBoxStyles'\r\n\r\nclass ColorBox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            copied: false,\r\n        }\r\n        this.handleCopy = this.handleCopy.bind(this)\r\n    }\r\n\r\n    handleCopy(evt){\r\n       this.setState({\r\n           copied: true,\r\n        },() => (setTimeout(() => this.setState({copied: false}), 1500)))\r\n    }\r\n\r\n    render(){\r\n        const { bgColor, colorName, paletteId, id, showingFullPalette, classes, format, showLink } = this.props;\r\n        const{copied } = this.state;\r\n        const textColor = chroma.contrast(bgColor, 'white') >= 4.5 ? \"white\" : \"black\"\r\n        return(\r\n            \r\n            <div className={`${classes.ColorBox} ${classes.dynamicColor}`}>\r\n                <div className={ `${classes.copyOverlayer} ${copied && classes.copyOverlayerShow}`} \r\n                    \r\n                ></div>\r\n                <div className={`${classes.overlayerMsg} ${copied && classes.overlayerMsgShow}` }>\r\n                    <h1>Copied!</h1>\r\n                    <p>{bgColor}</p>\r\n                </div>\r\n\r\n                <div className={classes.colorName}>\r\n                    {colorName} \r\n                </div>\r\n                \r\n                <CopyToClipboard onCopy = {this.handleCopy} \r\n                    text={(format === 'hex' &&  chroma(bgColor).hex()) ||\r\n                        (format === \"rgb\" && chroma(bgColor).css()) ||\r\n                        (format === \"rgba\" && chroma(bgColor).alpha(0.9).css()) }\r\n                >\r\n                    <button className={classes.copyButton}>\r\n                        Copy\r\n                    </button>\r\n                </CopyToClipboard>\r\n           \r\n            {showingFullPalette && !showLink &&\r\n                <Button className={classes.moreButton}>\r\n                    <Link  to = {`/palette/${paletteId}/${id}`} \r\n                            onClick={e => e.stopPropagation()} style={{ color: textColor}}>\r\n                        More\r\n                    </Link> \r\n                </Button>\r\n            }\r\n               \r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorBox);"]},"metadata":{},"sourceType":"module"}