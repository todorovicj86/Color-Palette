{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\PaletteShades.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PaletteNavbar from './PaletteNavbar';\nimport ColorBox from './ColorBox';\nimport Grid from '@material-ui/core/Grid';\nimport chroma from 'chroma-js';\nimport './PaletteShades.css';\n\nclass PaletteShades extends Component {\n  // getShades(){\n  //     let shadeObj =[]\n  //     const baseColor = this.props.color.color;\n  //     const name = this.props.color.name;\n  //     let makeShades = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900] \n  //     // let colorShade = chroma.scale(baseColor).scale(10);\n  //     for(let i = 0; i < makeShades.length; i++){\n  //         let colorShade = chroma(baseColor).luminance(makeShades[i]).hex()\n  //         // let colorShade = chroma.scale(baseColor).scale(10);\n  //         let data = {\n  //             name: name + \" \" + makeShades[i],\n  //             color: colorShade\n  //         }\n  //         shadeObj.push(data)\n  //     }\n  //     return shadeObj;\n  // }\n  getShades() {\n    let shadeObj = [];\n    const baseColor = this.props.color.color;\n    const name = this.props.color.name;\n    let makeShades = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n    let colorShade = chroma.scale([baseColor, 'black']).colors(10);\n\n    for (let i = 0; i < makeShades.length; i++) {\n      let data = {\n        name: name + \" \" + makeShades[i],\n        color: colorShade[i]\n      };\n      shadeObj.push(data);\n    }\n\n    return shadeObj;\n  }\n\n  render() {\n    let shades = this.getShades();\n    console.log(shades);\n    return React.createElement(\"div\", {\n      className: \"PaletteShades\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(PaletteNavbar, {\n      handleFormat: this.props.handleFormat,\n      format: this.props.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/palette/\".concat(this.props.palette.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Go back\"), shades.map(bgColor => React.createElement(ColorBox, {\n      colorName: bgColor.name,\n      bgColor: this.props.format === 'hex' && chroma(bgColor.color).hex() || this.props.format === \"rgb\" && chroma(bgColor.color).css() || this.props.format === \"rgba\" && chroma(bgColor.color).alpha(0.9).css(),\n      onCopy: this.props.onCopy,\n      format: this.props.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PaletteShades;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\PaletteShades.js"],"names":["React","Component","Link","PaletteNavbar","ColorBox","Grid","chroma","PaletteShades","getShades","shadeObj","baseColor","props","color","name","makeShades","colorShade","scale","colors","i","length","data","push","render","shades","console","log","handleFormat","format","palette","id","map","bgColor","hex","css","alpha","onCopy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PaletteNavbar from './PaletteNavbar'\r\nimport ColorBox from './ColorBox'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport chroma from 'chroma-js'\r\nimport './PaletteShades.css'\r\n\r\nclass PaletteShades extends Component {\r\n \r\n    // getShades(){\r\n    //     let shadeObj =[]\r\n    //     const baseColor = this.props.color.color;\r\n    //     const name = this.props.color.name;\r\n    //     let makeShades = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900] \r\n    //     // let colorShade = chroma.scale(baseColor).scale(10);\r\n    //     for(let i = 0; i < makeShades.length; i++){\r\n    //         let colorShade = chroma(baseColor).luminance(makeShades[i]).hex()\r\n    //         // let colorShade = chroma.scale(baseColor).scale(10);\r\n    //         let data = {\r\n    //             name: name + \" \" + makeShades[i],\r\n    //             color: colorShade\r\n    //         }\r\n    //         shadeObj.push(data)\r\n    //     }\r\n\r\n    //     return shadeObj;\r\n    // }\r\n\r\n      getShades(){\r\n        let shadeObj =[]\r\n        const baseColor = this.props.color.color;\r\n        const name = this.props.color.name;\r\n        let makeShades = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n        let colorShade = chroma.scale([baseColor, 'black']).colors(10); \r\n        for(let i = 0; i < makeShades.length; i++){\r\n            let data = {\r\n                name: name + \" \" + makeShades[i],\r\n                color: colorShade[i]\r\n            }\r\n            shadeObj.push(data)\r\n        }\r\n\r\n        return shadeObj;\r\n    }\r\n\r\n    render(){\r\n        let shades = this.getShades();\r\n      \r\n        console.log(shades)\r\n          \r\n        return(\r\n            <div className=\"PaletteShades\">\r\n                <PaletteNavbar handleFormat = {this.props.handleFormat} format = {this.props.format}/>\r\n               \r\n                <Link to = {`/palette/${this.props.palette.id}`}>Go back</Link>\r\n            \r\n                    {\r\n                        shades.map(bgColor => (\r\n                            <ColorBox \r\n                                colorName = {bgColor.name} \r\n                                bgColor = {\r\n                                    (this.props.format === 'hex' &&  chroma(bgColor.color).hex()) ||\r\n                                    (this.props.format === \"rgb\" && chroma(bgColor.color).css()) ||\r\n                                    (this.props.format === \"rgba\" && chroma(bgColor.color).alpha(0.9).css())                                                             \r\n                                }\r\n                                onCopy = {this.props.onCopy}\r\n                                format = {this.props.format}\r\n                                                                                    \r\n                            />\r\n                         \r\n                        ))\r\n                    }      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaletteShades;"]},"metadata":{},"sourceType":"module"}