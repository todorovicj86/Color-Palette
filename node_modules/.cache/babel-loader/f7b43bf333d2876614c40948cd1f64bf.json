{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ColorPalette.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ColorBox from './ColorBox';\nimport PaletteNavbar from './PaletteNavbar';\nimport Footer from './Footer';\nimport { getPaletteShades } from './helpers';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles/PaletteStyles';\nimport uuid from 'uuid';\n\nclass ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shadeLevel: 500\n    };\n    this.handleCopy = this.handleCopy.bind(this);\n    this.changeShade = this.changeShade.bind(this);\n  }\n\n  handleCopy(evt) {\n    this.props.onCopy(true);\n  }\n\n  changeShade(shadeLevel) {\n    this.setState({\n      shadeLevel: shadeLevel\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          palette = _this$props.palette,\n          format = _this$props.format,\n          sliderMarks = _this$props.sliderMarks,\n          handleFormat = _this$props.handleFormat,\n          classes = _this$props.classes,\n          showingFullPalette = _this$props.showingFullPalette;\n    const colorBoxes = palette.colors[this.state.shadeLevel].map(color => React.createElement(ColorBox, {\n      bgColor: color[format],\n      colorName: color.name,\n      key: uuid(),\n      onCopy: this.handleCopy,\n      format: format,\n      paletteId: palette.id,\n      id: color.id,\n      showingFullPalette: showingFullPalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n    getPaletteShades(palette);\n    return React.createElement(\"div\", {\n      className: classes.colorPalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(PaletteNavbar, {\n      handleFormat: handleFormat,\n      format: format,\n      marks: sliderMarks,\n      changeShade: this.changeShade,\n      hiddenSlider: false,\n      showingFullPalette: showingFullPalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: classes.linkBack,\n      id: \"LinkBackTo\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" Go back\")))), React.createElement(\"div\", {\n      className: classes.colorBoxesContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, colorBoxes), React.createElement(Footer, Object.assign({}, palette, {\n      showingFullPalette: !showingFullPalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nColorPalette.defaultProps = {\n  showingFullPalette: true\n};\nexport default withStyles(styles)(ColorPalette);","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ColorPalette.js"],"names":["React","Component","Link","Button","ColorBox","PaletteNavbar","Footer","getPaletteShades","withStyles","styles","uuid","ColorPalette","constructor","props","state","shadeLevel","handleCopy","bind","changeShade","evt","onCopy","setState","render","palette","format","sliderMarks","handleFormat","classes","showingFullPalette","colorBoxes","colors","map","color","name","id","colorPalette","header","link","linkBack","colorBoxesContainer","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport ColorBox from './ColorBox'\r\nimport PaletteNavbar from './PaletteNavbar'\r\nimport Footer from './Footer'\r\nimport {getPaletteShades} from './helpers'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport styles from './styles/PaletteStyles';\r\nimport uuid from 'uuid'\r\n\r\n\r\n\r\nclass ColorPalette extends Component {\r\n    static defaultProps = {\r\n        showingFullPalette: true,\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            shadeLevel: 500,\r\n\r\n        }\r\n        this.handleCopy = this.handleCopy.bind(this)\r\n        this.changeShade = this.changeShade.bind(this)\r\n    }\r\n\r\n    handleCopy(evt){\r\n       this.props.onCopy(true)\r\n    }\r\n\r\n    changeShade(shadeLevel){\r\n        this.setState({\r\n            shadeLevel: shadeLevel\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const {palette, format, sliderMarks,handleFormat, classes, showingFullPalette} = this.props;\r\n        const colorBoxes = palette.colors[this.state.shadeLevel].map (color => (\r\n            <ColorBox \r\n                bgColor = {color[format]}\r\n                colorName = {color.name}\r\n                key={uuid()}\r\n                onCopy = {this.handleCopy}\r\n                format = {format}\r\n                paletteId = {palette.id}\r\n                id={color.id}\r\n                showingFullPalette={showingFullPalette}\r\n            />\r\n        ))\r\n          \r\n          getPaletteShades(palette)\r\n        return (\r\n            <div className={classes.colorPalette}>\r\n                <div className={classes.header}>\r\n                    <PaletteNavbar \r\n                        handleFormat = {handleFormat} \r\n                        format = {format} \r\n                        marks = {sliderMarks}\r\n                        changeShade = {this.changeShade}\r\n                        hiddenSlider = {false}\r\n                        showingFullPalette={showingFullPalette}\r\n                    />\r\n\r\n                    <div className={classes.link}>\r\n                         <Button>\r\n                            <Link className= {classes.linkBack} id=\"LinkBackTo\" to = \"/\"><i className=\"fas fa-arrow-left\"></i> Go back</Link>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.colorBoxesContainer}>\r\n                    {colorBoxes}\r\n                </div>\r\n\r\n                <Footer {...palette} showingFullPalette={!showingFullPalette}/>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorPalette);"]},"metadata":{},"sourceType":"module"}