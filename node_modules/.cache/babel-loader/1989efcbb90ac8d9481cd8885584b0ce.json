{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\NewPaletteForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ColorBox from './ColorBox';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { ChromePicker } from 'react-color';\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paletteName: \"\",\n      id: \"\",\n      emoji: \"\",\n      colors: [{\n        name: \"red\",\n        color: \"#FF0000\"\n      }],\n      name: \"\",\n      color: \"\",\n      bgColor: \"#FF0000\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addColorName = this.addColorName.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(color) {\n    let newColor = color.hex;\n    console.log(newColor);\n    return newColor;\n  }\n\n  addNewColor(color) {\n    this.setState({});\n  }\n\n  addColorName(evt) {\n    let newColor = {\n      [evt.target.name]: evt.target.value\n    };\n    return newColor;\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n  }\n\n  handleClick(evt) {\n    let newColorName = this.addColorName(evt);\n    let newColor = this.handleChange(this.state.color);\n    let colorToAdd = {\n      name: newColorName,\n      color: newColor\n    };\n    this.setState(st => ({\n      colors: [...st.colors, colorToAdd]\n    }));\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      className: \"NewPaletteForm\",\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: {\n        backgroundColor: \"whitesmoke\",\n        width: \"15%\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Design Your Palette\"), React.createElement(Grid, {\n      item: true,\n      style: {\n        margin: \"30px 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Random Color\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Clear Palette\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(ChromePicker, {\n      color: this.state.colors.color,\n      onChangeComplete: this.handleChange,\n      style: {\n        margin: \"30px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"filled-with-placeholder\",\n      label: \"Color Name\",\n      placeholder: \"Color Name\",\n      margin: \"normal\",\n      variant: \"filled\",\n      value: this.state.colors.name,\n      name: \"name\",\n      onChange: this.addColorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleClick,\n      style: {\n        backgroundColor: this.state.colors.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Add Color\")))), React.createElement(Grid, {\n      container: true,\n      style: {\n        width: \"85%\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      style: {\n        backgroundColor: \"white\",\n        padding: \"10px\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        display: \"inline-block\",\n        textAlign: \"left\",\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Create A Palette\"), React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        textAlign: \"right\",\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Go Back\")), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.colors.map(color => React.createElement(ColorBox, {\n      colorCode: color.color,\n      colorName: color.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nNewPaletteForm.defaultProps = {\n  maxColors: 20\n};\nexport default NewPaletteForm;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\NewPaletteForm.js"],"names":["React","Component","Link","ColorBox","Grid","Button","TextField","ChromePicker","NewPaletteForm","constructor","props","state","paletteName","id","emoji","colors","name","color","bgColor","handleChange","bind","addColorName","handleSubmit","handleClick","newColor","hex","console","log","addNewColor","setState","evt","target","value","preventDefault","newColorName","colorToAdd","st","render","height","backgroundColor","width","flexDirection","alignItems","margin","padding","display","textAlign","map","defaultProps","maxColors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport ColorBox from './ColorBox'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {ChromePicker} from 'react-color'\r\n\r\n\r\nclass NewPaletteForm extends Component {\r\n    static defaultProps = {\r\n        maxColors: 20,\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            paletteName: \"\",\r\n            id: \"\",\r\n            emoji: \"\",\r\n            colors: [\r\n                { name: \"red\", color: \"#FF0000\"}\r\n            ],\r\n            name: \"\",\r\n            color: \"\",\r\n            bgColor: \"#FF0000\",\r\n          \r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.addColorName = this.addColorName.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n\r\n    }\r\n    handleChange(color) {\r\n        let newColor = color.hex\r\n        console.log(newColor)\r\n       return newColor\r\n    };\r\n\r\n    addNewColor(color){\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n    addColorName(evt){\r\n\r\n       let newColor = {\r\n        [evt.target.name]: evt.target.value,\r\n       }\r\n\r\n    return newColor\r\n    \r\n    }\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n    }\r\n\r\n    handleClick(evt){\r\n        let newColorName = this.addColorName(evt);\r\n        let newColor = this.handleChange(this.state.color)\r\n        let colorToAdd = {\r\n            name: newColorName,\r\n            color: newColor\r\n        }\r\n\r\n       \r\n        this.setState(st => ({\r\n            colors: [...st.colors, colorToAdd]\r\n        }))\r\n    \r\n    }\r\n\r\n \r\n    render(){\r\n\r\n \r\n        return(\r\n            <Grid container justify=\"center\" className = \"NewPaletteForm\" style={{height: \"100vh\"}}>\r\n                <Grid container justify=\"center\" style={{backgroundColor:\"whitesmoke\", width: \"15%\",  flexDirection: \"column\", alignItems: \"center\"}}>\r\n                    <h2>Design Your Palette</h2>\r\n                    <Grid item style= {{margin:\"30px 0\"}}>\r\n                     \r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                Random Color\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Clear Palette\r\n                            </Button>\r\n                    \r\n                    </Grid>\r\n                    <Grid item>\r\n                    \r\n                        <ChromePicker color={this.state.colors.color}\r\n                                    onChangeComplete = {this.handleChange}\r\n                                    style={{margin: \"30px auto\"}}\r\n                        />\r\n                        <form onSubmit = {this.handleSubmit}>  \r\n                            <TextField\r\n                                id=\"filled-with-placeholder\"\r\n                                label=\"Color Name\"\r\n                                placeholder=\"Color Name\"\r\n                                margin=\"normal\"\r\n                                variant=\"filled\"\r\n                                value = {this.state.colors.name}\r\n                                name=\"name\"\r\n                                onChange={this.addColorName}\r\n                            />\r\n                            <Button onClick = {this.handleClick} style={{backgroundColor: this.state.colors.color}}>\r\n                                Add Color\r\n                            </Button>\r\n                        </form>\r\n                        \r\n                      \r\n                    </Grid>\r\n                </Grid>\r\n            \r\n                <Grid container style={{width: \"85%\", flexDirection: \"column\" }}>\r\n                    <Grid item style={{backgroundColor: \"white\", padding: \"10px\", height: \"auto\"}}>\r\n                        <h5 style={{display: \"inline-block\", textAlign: \"left\", width: \"50%\" }}>Create A Palette</h5>\r\n                        <div style={{display: \"inline-block\", textAlign: \"right\", width: \"50%\"}}>\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                                <Link to = \"/\" style={{color: \"white\"}}> Go Back</Link>\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Save\r\n                            </Button>\r\n                            \r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item> \r\n                        {this.state.colors.map(color => (\r\n                            <ColorBox colorCode = {color.color}\r\n                                    colorName = {color.name}\r\n                            />\r\n                        ))}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n         \r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPaletteForm;"]},"metadata":{},"sourceType":"module"}