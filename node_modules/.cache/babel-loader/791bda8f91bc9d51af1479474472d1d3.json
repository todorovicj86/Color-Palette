{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ColorBox.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // import Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\nimport './ColorBox.css';\nconst styles = {\n  ColorBox: {\n    display: \"inline-block\",\n    height: props => props.showingFullPalette ? \"25%\" : \"50%\",\n    margin: \"0 auto\",\n    position: \"relative\",\n    width: \"20%\",\n    verticalAlign: \"middle\",\n    \"&:hover button:first-of-type\": {\n      opacity: \"1\",\n      transition: \"0.5s\"\n    }\n  },\n  colorName: {\n    bottom: \"0\",\n    fontSize: \"12px\",\n    marginBottom: \"8px\",\n    marginLeft: \"10px\",\n    left: \"0\",\n    letterSpacing: \"1px\",\n    padding: \"0\",\n    position: \"absolute\",\n    textTransform: \"uppercase\"\n  },\n  dynamicColor: {\n    color: props => chroma.contrast(props.bgColor, 'white') >= 4.5 ? \"white\" : \"black\",\n    backgroundColor: props => props.bgColor\n  },\n  show: {\n    opacity: \"1\",\n    position: \"absolute\",\n    transform: \"scale(50)\",\n    zIndex: \"10\"\n  },\n  copyButton: {\n    color: props => chroma.contrast(props.bgColor, 'white') >= 4.5 ? \"white\" : \"black\",\n    backgroundColor: \"rgba(255, 255, 255, 0.3)!important\",\n    display: \"inline-block\",\n    fontSize: \" 1rem\",\n    height: \" 30px\",\n    marginTop: \"-15px\",\n    marginLeft: \"-50px\",\n    left: \"50%\",\n    letterSpacing: \"1px\",\n    opacity: \"0\",\n    border: \" none\",\n    position: \"absolute\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    top: \"50%\",\n    width: \"100px\"\n  },\n  moreButton: {\n    color: props => chroma.contrast(props.bgColor, 'white') >= 4.5 ? \"white\" : \"black\",\n    backgroundColor: \"rgba(255, 255, 255, 0.3)!important\",\n    bottom: \"0\",\n    borderRadius: \"0!important\",\n    fontSize: \"12px!important\",\n    letterSpacing: \"1px!important\",\n    opacity: \"1\",\n    position: \" absolute!important\",\n    right: \"0\",\n    textTransform: \"uppercase\",\n    \"& a:hover\": {\n      textDecoration: \"none!important\"\n    }\n  },\n  copyOverlayer: {\n    backgroundColor: props => props.bgColor,\n    height: \"100%\",\n    opacity: \"0\",\n    transition: \"transform 0.6s ease-in-out\",\n    width: \"100%\",\n    zIndex: \"0\"\n  },\n  copyOverlayerShow: {\n    opacity: \"1\",\n    position: \"absolute\",\n    transform: \"scale(50)\",\n    width: \"100%\",\n    zIndex: \"10\",\n    height: \"100%\",\n    // transition: \"transform 0.6s ease-in-out\",\n    backgroundColor: props => props.bgColor\n  },\n  overlayerMsg: {\n    alignItems: \"center\",\n    bottom: \"0\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    left: \"0\",\n    justifyContent: \"center\",\n    position: \"fixed\",\n    top: \"0\",\n    right: \"0\",\n    opacity: \"0\",\n    transform: \"scale(0.1)\",\n    \"& h1\": {\n      backgroundColor: \"rgb(255, 255, 255, 0.3)\",\n      fontSize: \"5rem\",\n      fontHeight: \"400\",\n      textShadow: \"1px 2px black\",\n      textAlign: \"center\",\n      textTransform: \"uppercase\",\n      padding: \"1rem\",\n      width: \"100%\"\n    },\n    \"& p\": {\n      fontSize: \"1.5rem\",\n      fontWeight: \"100\"\n    }\n  },\n  overlayerMsgShow: {\n    opacity: \"1\",\n    transition: \"all 0.4s ease-in-out\",\n    transitionDelay: \"0.3s\",\n    transform: \"scale(1)\",\n    zIndex: \"15\",\n    alignItems: \"center\",\n    bottom: \"0\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    left: \"0\",\n    justifyContent: \"center\",\n    position: \"fixed\",\n    top: \"0\",\n    right: \"0\"\n  }\n};\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.handleCopy = this.handleCopy.bind(this); // this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleCopy(evt) {\n    //    this.props.onCopy(true)\n    this.setState({\n      copied: true\n    }, () => setTimeout(() => this.setState({\n      copied: false\n    }), 1500));\n  } // handleClick(evt){\n  //     this.setState({\n  //         copied: true,\n  //     })\n  //     setTimeout(()=>\n  //         this.setState({\n  //             copied: false,\n  //     }),1000)\n  // }\n\n\n  render() {\n    // let bgColor = this.props.colorCode; \n    const _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          colorName = _this$props.colorName,\n          paletteId = _this$props.paletteId,\n          id = _this$props.id,\n          showingFullPalette = _this$props.showingFullPalette,\n          classes = _this$props.classes,\n          format = _this$props.format;\n    const copied = this.state.copied;\n    const textColor = chroma.contrast(bgColor, 'white') >= 4.5 ? \"white\" : \"black\";\n    return React.createElement(\"div\", {\n      className: \"\".concat(classes.ColorBox, \" \").concat(classes.dynamicColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: copied ? classes.copyOverlayerShow + classes.copyOverlayer : classes.copyOverlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: copied ? classes.overlayerMsgShow : classes.overlayerMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Copied!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, bgColor)), React.createElement(\"div\", {\n      className: classes.colorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, colorName), React.createElement(CopyToClipboard, {\n      onCopy: this.handleCopy,\n      text: format === 'hex' && chroma(bgColor).hex() || format === \"rgb\" && chroma(bgColor).css() || format === \"rgba\" && chroma(bgColor).alpha(0.9).css(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: classes.copyButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Copy\")), showingFullPalette && React.createElement(Button, {\n      className: classes.moreButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/palette/\".concat(paletteId, \"/\").concat(id),\n      onClick: e => e.stopPropagation(),\n      style: {\n        color: textColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"More\")));\n  }\n\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ColorBox.js"],"names":["React","Component","Link","CopyToClipboard","Button","chroma","withStyles","styles","ColorBox","display","height","props","showingFullPalette","margin","position","width","verticalAlign","opacity","transition","colorName","bottom","fontSize","marginBottom","marginLeft","left","letterSpacing","padding","textTransform","dynamicColor","color","contrast","bgColor","backgroundColor","show","transform","zIndex","copyButton","marginTop","border","textAlign","top","moreButton","borderRadius","right","textDecoration","copyOverlayer","copyOverlayerShow","overlayerMsg","alignItems","flexDirection","justifyContent","fontHeight","textShadow","fontWeight","overlayerMsgShow","transitionDelay","constructor","state","copied","handleCopy","bind","evt","setState","setTimeout","render","paletteId","id","classes","format","textColor","hex","css","alpha","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport chroma from 'chroma-js'\r\nimport { withStyles } from '@material-ui/styles';\r\nimport './ColorBox.css'\r\n\r\nconst styles = {\r\n\r\n    ColorBox: {\r\n        display: \"inline-block\",\r\n        height: props => props.showingFullPalette? \"25%\" : \"50%\",\r\n        margin: \"0 auto\",\r\n        position: \"relative\",\r\n        width: \"20%\",\r\n        verticalAlign: \"middle\",\r\n        \"&:hover button:first-of-type\": {\r\n            opacity: \"1\",\r\n            transition: \"0.5s\"\r\n        }\r\n    },\r\n\r\n    colorName: {\r\n        bottom: \"0\",\r\n        fontSize: \"12px\",\r\n        marginBottom: \"8px\",\r\n        marginLeft: \"10px\",\r\n        left: \"0\",\r\n        letterSpacing: \"1px\",\r\n        padding: \"0\",\r\n        position: \"absolute\",\r\n        textTransform: \"uppercase\",\r\n    },\r\n    dynamicColor:{\r\n        color: props => chroma.contrast(props.bgColor, 'white') >= 4.5 ? \"white\" : \"black\",\r\n        backgroundColor: props => props.bgColor,\r\n    },\r\n\r\n    show: {\r\n        opacity: \"1\",\r\n        position: \"absolute\",\r\n        transform: \"scale(50)\",\r\n        zIndex: \"10\",\r\n    },\r\n\r\n    copyButton: {\r\n        color: props => chroma.contrast(props.bgColor, 'white') >= 4.5 ? \"white\" : \"black\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0.3)!important\",\r\n        display: \"inline-block\",\r\n        fontSize:\" 1rem\",\r\n        height:\" 30px\",\r\n        marginTop: \"-15px\",\r\n        marginLeft: \"-50px\",\r\n        left: \"50%\",\r\n        letterSpacing: \"1px\",\r\n        opacity: \"0\",\r\n        border:\" none\",\r\n        position: \"absolute\",\r\n        textAlign: \"center\",\r\n        textTransform: \"uppercase\",\r\n        top: \"50%\",\r\n        width: \"100px\",\r\n    },\r\n\r\n    moreButton: {\r\n        color: props => chroma.contrast(props.bgColor, 'white') >= 4.5 ? \"white\" : \"black\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0.3)!important\",\r\n        bottom: \"0\",\r\n        borderRadius: \"0!important\",\r\n        fontSize: \"12px!important\",\r\n        letterSpacing: \"1px!important\",\r\n        opacity: \"1\",\r\n        position:\" absolute!important\",\r\n        right: \"0\",\r\n        textTransform: \"uppercase\",\r\n        \"& a:hover\": {\r\n            textDecoration: \"none!important\"\r\n        }\r\n    },\r\n\r\n    copyOverlayer: {\r\n        backgroundColor: props => props.bgColor,\r\n        height: \"100%\",\r\n        opacity: \"0\",\r\n        transition: \"transform 0.6s ease-in-out\",\r\n        width: \"100%\",\r\n        zIndex: \"0\",\r\n    },\r\n\r\n    copyOverlayerShow: {\r\n        opacity: \"1\",\r\n        position: \"absolute\",\r\n        transform: \"scale(50)\",\r\n        width: \"100%\",\r\n        zIndex: \"10\",\r\n        height: \"100%\",\r\n        // transition: \"transform 0.6s ease-in-out\",\r\n        backgroundColor: props => props.bgColor,\r\n    },\r\n\r\n    overlayerMsg: {\r\n        alignItems: \"center\",\r\n        bottom: \"0\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        left: \"0\",\r\n        justifyContent: \"center\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        right: \"0\",\r\n        opacity: \"0\",\r\n        transform: \"scale(0.1)\",\r\n        \"& h1\":{\r\n            backgroundColor: \"rgb(255, 255, 255, 0.3)\",\r\n            fontSize: \"5rem\",\r\n            fontHeight: \"400\",\r\n            textShadow: \"1px 2px black\",\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            padding: \"1rem\",\r\n            width: \"100%\",\r\n        },\r\n        \"& p\": {\r\n            fontSize: \"1.5rem\",\r\n            fontWeight: \"100\",\r\n        }\r\n    },\r\n    overlayerMsgShow: {\r\n        opacity: \"1\",\r\n        transition: \"all 0.4s ease-in-out\",\r\n        transitionDelay: \"0.3s\",\r\n        transform: \"scale(1)\",\r\n        zIndex: \"15\",\r\n        alignItems: \"center\",\r\n        bottom: \"0\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        left: \"0\",\r\n        justifyContent: \"center\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        right: \"0\",\r\n    }\r\n\r\n}\r\n\r\nclass ColorBox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            copied: false,\r\n        }\r\n        this.handleCopy = this.handleCopy.bind(this)\r\n        // this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleCopy(evt){\r\n    //    this.props.onCopy(true)\r\n       this.setState({\r\n           copied: true,\r\n        },() => (setTimeout(() => this.setState({copied: false}), 1500)))\r\n    }\r\n\r\n    // handleClick(evt){\r\n    //     this.setState({\r\n    //         copied: true,\r\n    //     })\r\n    //     setTimeout(()=>\r\n    //         this.setState({\r\n    //             copied: false,\r\n    //     }),1000)\r\n    // }\r\n    render(){\r\n        // let bgColor = this.props.colorCode; \r\n        const { bgColor, colorName, paletteId, id, showingFullPalette, classes, format } = this.props;\r\n        const{copied } = this.state;\r\n        const textColor = chroma.contrast(bgColor, 'white') >= 4.5 ? \"white\" : \"black\"\r\n        return(\r\n            \r\n            <div className={`${classes.ColorBox} ${classes.dynamicColor}`}>\r\n                <div className={copied ? (classes.copyOverlayerShow + classes.copyOverlayer) : classes.copyOverlayer} \r\n                    \r\n                ></div>\r\n                <div className={copied ? classes.overlayerMsgShow : classes.overlayerMsg }>\r\n                    <h1>Copied!</h1>\r\n                    <p>{bgColor}</p>\r\n                </div>\r\n\r\n                <div className={classes.colorName}>\r\n                    {colorName} \r\n                </div>\r\n                \r\n                <CopyToClipboard onCopy = {this.handleCopy} \r\n                    text={(format === 'hex' &&  chroma(bgColor).hex()) ||\r\n                        (format === \"rgb\" && chroma(bgColor).css()) ||\r\n                        (format === \"rgba\" && chroma(bgColor).alpha(0.9).css()) }\r\n                >\r\n                    <button className={classes.copyButton}>\r\n                        Copy\r\n                    </button>\r\n                </CopyToClipboard>\r\n           \r\n            {showingFullPalette &&\r\n                <Button className={classes.moreButton}>\r\n                    <Link  to = {`/palette/${paletteId}/${id}`} \r\n                            onClick={e => e.stopPropagation()} style={{ color: textColor}}>\r\n                        More\r\n                    </Link> \r\n                </Button>\r\n            }\r\n               \r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorBox);"]},"metadata":{},"sourceType":"module"}