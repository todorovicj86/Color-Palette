{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport seedColors from './seedColors';\nimport ColorPalette from './ColorPalette';\nimport ColorPaletteList from './ColorPaletteList';\nimport PaletteShades from './PaletteShades';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"hex\"\n    };\n    this.handleFormat = this.handleFormat.bind(this);\n  }\n\n  handleFormat(value) {\n    this.setState({\n      format: value\n    });\n  }\n\n  render() {\n    const getPalette = props => {\n      let name = props.match.params.name;\n      let currentPalette = this.props.colorPalettes.find(palette => palette.id === name);\n      return React.createElement(ColorPalette, Object.assign({}, props, {\n        palette: currentPalette,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    };\n\n    const getColorShades = props => {\n      let name = props.match.params.name;\n      let colorName = props.match.params.colorName;\n      let currentPalette = this.props.colorPalettes.find(palette => palette.id === name);\n      let currentColor = currentPalette.colors.find(color => color.name === colorName);\n      return React.createElement(PaletteShades, Object.assign({}, props, {\n        color: currentColor,\n        palette: currentPalette,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/palette\",\n      render: () => React.createElement(ColorPaletteList, {\n        colorPalettes: this.props.colorPalettes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:name\",\n      render: getPalette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:name/:colorName\",\n      render: getColorShades,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      exact: true,\n      path: \"/palette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nApp.defaultProps = {\n  colorPalettes: seedColors\n};\nexport default App;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\App.js"],"names":["React","Component","Route","Switch","Redirect","seedColors","ColorPalette","ColorPaletteList","PaletteShades","App","constructor","props","state","format","handleFormat","bind","value","setState","render","getPalette","name","match","params","currentPalette","colorPalettes","find","palette","id","getColorShades","colorName","currentColor","colors","color","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport seedColors from './seedColors'\nimport ColorPalette from './ColorPalette'\nimport ColorPaletteList from './ColorPaletteList'\nimport PaletteShades from './PaletteShades'\nimport './App.css';\n\nclass App extends Component {\n  static defaultProps = {\n    colorPalettes: seedColors\n  }\n  constructor(props){\n    super(props);\n    this.state = {\n        format: \"hex\"\n    }\n\n    this.handleFormat = this.handleFormat.bind(this)\n  }\n\n  handleFormat(value){\n      this.setState({\n          format: value,\n      })\n  }\n  \n  render(){\n    const getPalette = props => {\n      let name = props.match.params.name;\n           \n      let currentPalette = this.props.colorPalettes.find(\n        palette => palette.id === name\n        \n      );\n      return <ColorPalette {...props} palette={currentPalette} />;\n    };\n\n    const getColorShades = props => {\n      let name = props.match.params.name;\n      let colorName = props.match.params.colorName;\n      let currentPalette = this.props.colorPalettes.find( \n        palette => palette.id === name\n        \n      )\n      let currentColor = currentPalette.colors.find(\n        color => color.name === colorName\n      )\n      return <PaletteShades {...props} color={currentColor} palette = {currentPalette} />\n    }\n\n\n    return (\n      <div className=\"App\">\n\n        <Switch>\n          <Route exact path=\"/palette\" render = {() => <ColorPaletteList colorPalettes={this.props.colorPalettes} />} />\n          <Route exact path = \"/palette/:name\" render = {getPalette} />\n          <Route exact path = \"/palette/:name/:colorName\" render ={getColorShades} />\n          <Redirect exact path = \"/palette\" />\n        </Switch>\n     \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}