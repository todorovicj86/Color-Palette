{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\FormNavbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@icons/material/ChevronRightIcon';\nimport Button from '@material-ui/core/Button';\nimport ModalDialog from './ModalDialog';\nimport styles from './styles/FormNavbarStyles';\n\nclass FormNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openModal: false,\n      openEmoji: false\n    };\n    this.cancelSave = this.cancelSave.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.openEmojiModal = this.openEmojiModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      openModal: true\n    });\n  }\n\n  cancelSave() {\n    this.setState({\n      openModal: false,\n      openEmoji: false\n    });\n  } // handleChange(evt){\n  //     this.setState({\n  //       [evt.target.name]: evt.target.value,\n  //     })\n  // }\n\n\n  openEmojiModal() {\n    this.setState({\n      openEmoji: true,\n      openModal: false\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          open = _this$props.open,\n          palettes = _this$props.palettes;\n    const _this$state = this.state,\n          openModal = _this$state.openModal,\n          openEmoji = _this$state.openEmoji;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      color: \"default\",\n      position: \"fixed\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.props.handleDrawerOpen,\n      edge: \"start\",\n      className: classNames(classes.menuButton, open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Create A Palette\")), React.createElement(\"div\", {\n      className: classes.navBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: classes.goBackLink,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Go Back\")), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Save Palette\"))), React.createElement(ModalDialog, {\n      openModal: openModal,\n      cancelSave: this.cancelSave,\n      savePalette: this.props.savePalette,\n      palettes: palettes,\n      openEmoji: openEmoji,\n      openEmojiModal: this.openEmojiModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(FormNavbar);","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\FormNavbar.js"],"names":["React","Component","Link","withStyles","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","ChevronRightIcon","Button","ModalDialog","styles","FormNavbar","constructor","props","state","openModal","openEmoji","cancelSave","bind","openEmojiModal","setState","render","classes","open","palettes","root","appBar","appBarShift","handleDrawerOpen","menuButton","hide","navBtn","goBackLink","savePalette","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronRightIcon from '@icons/material/ChevronRightIcon';\r\nimport Button from '@material-ui/core/Button';\r\nimport ModalDialog from './ModalDialog'\r\nimport styles from './styles/FormNavbarStyles'\r\n\r\n\r\nclass FormNavbar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          openModal: false, \r\n          openEmoji: false       \r\n        }\r\n        this.cancelSave = this.cancelSave.bind(this)\r\n        this.openModal = this.openModal.bind(this)\r\n        this.openEmojiModal = this.openEmojiModal.bind(this)   \r\n    }\r\n\r\n  \r\n\r\n    openModal(){\r\n        this.setState({\r\n          openModal: true,\r\n        })\r\n    }\r\n  \r\n    cancelSave(){\r\n        this.setState({\r\n          openModal: false,\r\n          openEmoji: false   \r\n        })\r\n    }\r\n\r\n    // handleChange(evt){\r\n    //     this.setState({\r\n    //       [evt.target.name]: evt.target.value,\r\n    //     })\r\n    // }\r\n\r\n    openEmojiModal(){\r\n      this.setState({\r\n          openEmoji: true,\r\n          openModal: false,\r\n\r\n      })\r\n  }\r\n\r\n    render(){\r\n        const {classes, open, palettes} = this.props;\r\n        const { openModal, openEmoji } = this.state;\r\n   \r\n        return(\r\n            <div className={classes.root}>\r\n              <CssBaseline />\r\n              <AppBar\r\n                color=\"default\"\r\n                  position=\"fixed\"\r\n                  className={classNames(classes.appBar, {\r\n                      [classes.appBarShift]: open,\r\n                  })}\r\n              >\r\n                  <Toolbar>\r\n                      <IconButton\r\n                          color=\"inherit\"\r\n                          aria-label=\"open drawer\"\r\n                          onClick={this.props.handleDrawerOpen}\r\n                          edge=\"start\"\r\n                          className={classNames(classes.menuButton, open && classes.hide)}\r\n                      >\r\n                          <ChevronRightIcon />\r\n                      </IconButton>\r\n\r\n                      <Typography variant=\"h6\" noWrap>\r\n                          Create A Palette\r\n                      </Typography>\r\n                      \r\n                  </Toolbar>\r\n\r\n                  <div className={classes.navBtn}>\r\n                    <Link className={classes.goBackLink} to = \"/\">\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Go Back\r\n                        </Button>\r\n                    </Link>\r\n                    \r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.openModal}>\r\n                        Save Palette\r\n                    </Button>\r\n                  </div>\r\n                \r\n              </AppBar>\r\n\r\n              <ModalDialog \r\n                openModal={openModal}\r\n                cancelSave={this.cancelSave}\r\n                savePalette = {this.props.savePalette}\r\n                palettes={palettes}\r\n                openEmoji = {openEmoji}\r\n                openEmojiModal={this.openEmojiModal}\r\n              />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(FormNavbar);"]},"metadata":{},"sourceType":"module"}