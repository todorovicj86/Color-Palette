{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\todor\\\\Documents\\\\4-Web Development\\\\1-Web Development Courses\\\\3-REACT\\\\25-Color Palette\\\\color-palette\\\\src\\\\ColorPalette.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // import {SortableContainer, SortableElement} from 'react-sortable-hoc';\n\nimport ColorBox from './ColorBox';\nimport PaletteFooter from './PaletteFooter';\nimport PaletteNavbar from './PaletteNavbar';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport chroma from 'chroma-js';\nimport './ColorPalette.css';\n\nclass ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCopy = this.handleCopy.bind(this);\n  }\n\n  handleCopy(evt) {\n    this.props.onCopy(true);\n  }\n\n  render() {\n    const palette = this.props.palette;\n    const colorBoxes = palette.colors.map(color => React.createElement(ColorBox, {\n      bgColor: color.color,\n      colorName: color.name,\n      key: color.name // format = {this.props.format}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"ColorPalette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ColorPalette-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(PaletteNavbar, {\n      handleFormat: this.props.handleFormat,\n      format: this.props.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ColorPalette-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Go back\"))), React.createElement(\"div\", {\n      className: \"ColorPalette-ColorBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, colorBoxes), React.createElement(CopyToClipboard, {\n      onCopy: this.handleCopy,\n      text: this.props.format === 'hex' && chroma(color.color).hex() || this.props.format === \"rgb\" && chroma(color.color).css() || this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Copy\")), React.createElement(\"div\", {\n      className: \"ColorPalette-Footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(PaletteFooter, {\n      paletteName: palette.paletteName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ColorPalette;","map":{"version":3,"sources":["C:\\Users\\todor\\Documents\\4-Web Development\\1-Web Development Courses\\3-REACT\\25-Color Palette\\color-palette\\src\\ColorPalette.js"],"names":["React","Component","Link","CopyToClipboard","ColorBox","PaletteFooter","PaletteNavbar","Grid","Button","chroma","ColorPalette","constructor","props","handleCopy","bind","evt","onCopy","render","palette","colorBoxes","colors","map","color","name","handleFormat","format","hex","css","alpha","contrast","position","left","top","transform","paletteName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\n// import {SortableContainer, SortableElement} from 'react-sortable-hoc';\r\nimport ColorBox from './ColorBox'\r\nimport PaletteFooter from './PaletteFooter'\r\nimport PaletteNavbar from './PaletteNavbar'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport chroma from 'chroma-js'\r\nimport './ColorPalette.css'\r\n\r\nclass ColorPalette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleCopy = this.handleCopy.bind(this)\r\n    }\r\n\r\n    handleCopy(evt){\r\n       this.props.onCopy(true)\r\n    }\r\n\r\n    render(){\r\n\r\n        const palette = this.props.palette;\r\n        const colorBoxes = palette.colors.map (color => (\r\n            <ColorBox bgColor = {color.color}\r\n                    colorName = {color.name}\r\n                    key={color.name}\r\n                    // format = {this.props.format}\r\n            />\r\n        ))\r\n                      \r\n        return (\r\n            <div className=\"ColorPalette\">\r\n                <div className=\"ColorPalette-header\">\r\n                    <PaletteNavbar handleFormat = {this.props.handleFormat} format = {this.props.format} />\r\n\r\n                    <div className=\"ColorPalette-link\">\r\n                        <Link to = \"/\">Go back</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ColorPalette-ColorBoxes\">\r\n                    {colorBoxes}\r\n                </div>\r\n\r\n                {/* <Grid container spacing={0}> \r\n                    {\r\n                        palette.colors.map(color => (\r\n                            <ColorBox style={{height: \"25vh\",position: \"relative\", \r\n                                backgroundColor: color.color,\r\n                                    color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\"\r\n                                }} /> */}\r\n                            \r\n                                 {/* <div style={{position: \"absolute\", left: \"0\", bottom: \"0\", marginLeft: \"10px\", textTransform: \"uppercase\"}}>{color.name}</div> */}\r\n                               \r\n                                 {/* <p>{\r\n                                        (this.props.format === 'hex' &&  chroma(color.color).hex()) ||\r\n                                        (this.props.format === \"rgb\" && chroma(color.color).css()) ||\r\n                                        (this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css())  \r\n                                    }\r\n                                </p> */}\r\n                            \r\n                                <CopyToClipboard onCopy = {this.handleCopy} \r\n                                                text={(this.props.format === 'hex' &&  chroma(color.color).hex()) ||\r\n                                                        (this.props.format === \"rgb\" && chroma(color.color).css()) ||\r\n                                                        (this.props.format === \"rgba\" && chroma(color.color).alpha(0.9).css())}\r\n                                >\r\n                                    <Button style={{ color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\", \r\n                                        position: \"absolute\", left: \"50%\", top: \"50%\", transform: \"translate(-50%, -50%)\"\r\n                                    \r\n                                    }}>\r\n                                        Copy\r\n                                    </Button>\r\n                                </CopyToClipboard>\r\n                                                    \r\n                                {/* <Link to = {`/palette/${palette.id}/${color.name}`} \r\n                                        style={{ color: chroma.contrast(color.color, 'white') >= 4.5 ? \"white\" : \"black\", \r\n                                        position: \"absolute\", right: \"0\", bottom: \"0\", marginRight: \"10px\", textTransform: \"uppercase\"\r\n                                        }}\r\n                                >\r\n                                    More\r\n                                </Link> */}\r\n{/*                             \r\n                        ))\r\n                    }\r\n                </Grid> */}\r\n                <div className=\"ColorPalette-Footer\">\r\n                    <PaletteFooter paletteName = {palette.paletteName} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorPalette;"]},"metadata":{},"sourceType":"module"}